name: release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
  #push:
  #pull_request:
  #  branches: [ main ]
  #  paths:
  #  - '**.cs'
  #  - '**.csproj'

env:
  DOTNET_VERSION: '5.0' # The .NET SDK version to use

jobs:
    build-test-package:
        uses: Nykkolas/DronePublish/.github/workflows/build-test-package.yml@master
        with:
            save-installer: true
            tag: latest # TODO : a priori impossible d'utiliser $ {{env.TAG}} mais j'ai la flemme de creuser plus

    release:
        name: release-${{matrix.os}}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-latest]
                #os: [ubuntu-latest, windows-latest, macOS-latest]

        steps:
            - name: Download installer
              uses: actions/download-artifact@v2
              with:
                name: installer
                path: ${{ env.INSTALLER_DIR }}

            #- name: Checkout
            #  uses: actions/checkout@v2

            - name: Get Tag name
              uses: olegtarasov/get-tag@v2.1
              id: tagName

            #- name: Set TAG environment variable
            #  run: echo "TAG=$GIT_TAG_NAME" >> $GITHUB_ENV

            #- name: Show Tag name
            #  run: echo $TAG

            #- name: Setup .NET Core
            #  uses: actions/setup-dotnet@v1
            #  with:
            #    dotnet-version: ${{ env.DOTNET_VERSION }}
        
            #- name: Install dependencies
            #    run: dotnet restore
      
            #- name: Build
            #    run: dotnet build --configuration Release --no-restore
    
            #- name: Test
            #    run: dotnet test --no-restore --verbosity normal

            #- name: Package
            #    run: |
            #    "%programfiles(x86)%\Inno Setup 6\iscc.exe" /dTAG=${{ env.GIT_TAG_NAME }} "DronePublish.Installer/InstallScript.iss"
            #    shell: cmd

            - name: Release
              uses: "marvinpinto/action-automatic-releases@latest"
              with:
                repo_token: "${{ secrets.GITHUB_TOKEN }}"
                prerelease: false
                draft: true
                title: "DronePublish : ${{ env.GIT_TAG_NAME }}"
                files: DronePublish.Installer/Output/*
